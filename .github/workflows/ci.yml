name: Build and Verify with PyInstaller

on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # Use a specific version if needed, e.g., '3.10'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Install system dependencies on Ubuntu
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk

    - name: Clean previous build artifacts on Unix-like systems
      if: runner.os != 'Windows'
      run: |
        if [ -d "file_transfer_project/gui/dist" ]; then
          rm -rf file_transfer_project/gui/dist
        fi

    - name: Clean previous build artifacts on Windows
      if: runner.os == 'Windows'
      run: |
        Remove-Item -Path file_transfer_project/gui/dist -Recurse -Force -ErrorAction SilentlyContinue

    - name: Build with PyInstaller
      run: |
        cd file_transfer_project/gui
        pyinstaller --onefile --windowed file_transfer_gui.py

    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-build
        path: file_transfer_project/gui/dist

  verify:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download build artifacts for macOS
      uses: actions/download-artifact@v3
      with:
        name: macos-latest-build
        path: file_transfer_project/gui/dist

    - name: Download build artifacts for Windows
      uses: actions/download-artifact@v3
      with:
        name: windows-latest-build
        path: file_transfer_project/gui/dist

    - name: Download build artifacts for Ubuntu
      uses: actions/download-artifact@v3
      with:
        name: ubuntu-latest-build
        path: file_transfer_project/gui/dist

    - name: Verify Windows Build
      run: |
        if [ -f "file_transfer_project/gui/dist/file_transfer_gui.exe" ]; then
          echo "Windows build artifact found!"
        else
          echo "Windows build artifact not found!"
          exit 1
        fi

  upload-artifacts:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Git
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git config --global credential.helper store
        echo "https://x-access-token:${{ github.token}}@github.com" > ~/.git-credentials

    - name: Create artifact branch
      run: |
        git checkout -b artifact-branch

    - name: Copy build artifacts to repository
      run: |
        mkdir -p artifacts/file_transfer_project/gui/dist
        cp -r file_transfer_project/gui/dist/* artifacts/file_transfer_project/gui/dist/

    - name: Commit and push artifacts
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Automated Change
        branch: artifact-branch
        commit_options: '--no-verify --signoff'
        commit_author: 'Author <actions@github.com>'
        status_options: '--untracked-files=no'
        skip_dirty_check: true

